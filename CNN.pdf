{
 "cells": [
  {
   "cell_type": "code",
   "execution_count": 1,
   "metadata": {
    "ExecuteTime": {
     "end_time": "2022-04-22T17:45:25.606572Z",
     "start_time": "2022-04-22T17:45:18.916934Z"
    }
   },
   "outputs": [],
   "source": [
    "#Importing the Keras libraries and packages\n",
    "import os\n",
    "import pandas as pd\n",
    "import pickle\n",
    "import numpy as np\n",
    "import tensorflow as tf\n",
    "from tensorflow.keras.models import load_model\n",
    "from tensorflow.keras.preprocessing.image import ImageDataGenerator\n",
    "from tensorflow.keras.models import Model\n",
    "from PIL import Image"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 2,
   "metadata": {
    "ExecuteTime": {
     "end_time": "2022-04-22T17:45:26.046832Z",
     "start_time": "2022-04-22T17:45:25.623586Z"
    }
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Model: \"sequential\"\n",
      "_________________________________________________________________\n",
      " Layer (type)                Output Shape              Param #   \n",
      "=================================================================\n",
      " conv2d (Conv2D)             (None, 64, 64, 32)        896       \n",
      "                                                                 \n",
      " max_pooling2d (MaxPooling2D  (None, 32, 32, 32)       0         \n",
      " )                                                               \n",
      "                                                                 \n",
      " conv2d_1 (Conv2D)           (None, 32, 32, 64)        18496     \n",
      "                                                                 \n",
      " max_pooling2d_1 (MaxPooling  (None, 16, 16, 64)       0         \n",
      " 2D)                                                             \n",
      "                                                                 \n",
      " flatten (Flatten)           (None, 16384)             0         \n",
      "                                                                 \n",
      " dense (Dense)               (None, 128)               2097280   \n",
      "                                                                 \n",
      " dense_1 (Dense)             (None, 1)                 129       \n",
      "                                                                 \n",
      "=================================================================\n",
      "Total params: 2,116,801\n",
      "Trainable params: 2,116,801\n",
      "Non-trainable params: 0\n",
      "_________________________________________________________________\n"
     ]
    }
   ],
   "source": [
    "# Initialising the CNN\n",
    "classifier = tf.keras.models.Sequential()\n",
    "\n",
    "classifier.add(tf.keras.layers.Convolution2D(filters=32,\n",
    "                                  kernel_size=3,\n",
    "                                  padding=\"same\",\n",
    "                                  input_shape=(64, 64, 3),\n",
    "                                  activation='relu'))\n",
    "\n",
    "classifier.add(tf.keras.layers.MaxPooling2D(pool_size=2, strides=2, padding='valid'))\n",
    "\n",
    "classifier.add(tf.keras.layers.Convolution2D(filters=64,\n",
    "                                  kernel_size=3,\n",
    "                                  padding=\"same\",\n",
    "                                  activation=\"relu\"))\n",
    "\n",
    "classifier.add(tf.keras.layers.MaxPooling2D(pool_size=2, strides=2, padding='valid'))\n",
    "\n",
    "# Part Of Neural Network\n",
    "\n",
    "classifier.add(tf.keras.layers.Flatten())\n",
    "\n",
    "classifier.add(tf.keras.layers.Dense(units=128, activation='relu'))\n",
    "\n",
    "classifier.add(tf.keras.layers.Dense(units=1, activation='sigmoid'))\n",
    "\n",
    "classifier.compile(optimizer='adam',\n",
    "                   loss='binary_crossentropy',\n",
    "                   metrics=['accuracy'])\n",
    "\n",
    "classifier.summary()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 3,
   "metadata": {
    "ExecuteTime": {
     "end_time": "2022-04-22T17:45:26.134709Z",
     "start_time": "2022-04-22T17:45:26.052805Z"
    }
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Found 100 images belonging to 2 classes.\n",
      "Found 100 images belonging to 2 classes.\n"
     ]
    }
   ],
   "source": [
    "# Part 2 - Fitting the CNN to the images\n",
    "\n",
    "from tensorflow.keras.preprocessing.image import ImageDataGenerator\n",
    "train_datagen = ImageDataGenerator(rescale=1. / 255,\n",
    "                                   shear_range=0.2,\n",
    "                                   zoom_range=0.2,\n",
    "                                   horizontal_flip=True)\n",
    "test_datagen = ImageDataGenerator(rescale=1. / 255)\n",
    "\n",
    "\n",
    "training_set = train_datagen.flow_from_directory(\n",
    "    r\"C:\\Users\\dell\\Desktop\\MYFILES\\anaconda\\Covid-19-chest-x-ray-detection\\Data\\train\",\n",
    "    target_size=(64, 64),\n",
    "    batch_size=32,\n",
    "    class_mode='binary')\n",
    "test_set = test_datagen.flow_from_directory(\n",
    "    r\"C:\\Users\\dell\\Desktop\\MYFILES\\anaconda\\Covid-19-chest-x-ray-detection\\Data\\train\",\n",
    "    target_size=(64, 64),\n",
    "    batch_size=32,\n",
    "    class_mode='binary')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 8,
   "metadata": {
    "ExecuteTime": {
     "end_time": "2022-04-22T17:57:19.710865Z",
     "start_time": "2022-04-22T17:56:19.498642Z"
    }
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Epoch 1/10\n",
      "4/4 [==============================] - 6s 2s/step - loss: 0.0265 - accuracy: 0.9900 - val_loss: 0.0188 - val_accuracy: 1.0000\n",
      "Epoch 2/10\n",
      "4/4 [==============================] - 6s 2s/step - loss: 0.0532 - accuracy: 0.9700 - val_loss: 0.0138 - val_accuracy: 1.0000\n",
      "Epoch 3/10\n",
      "4/4 [==============================] - 7s 2s/step - loss: 0.0210 - accuracy: 1.0000 - val_loss: 0.0230 - val_accuracy: 0.9900\n",
      "Epoch 4/10\n",
      "4/4 [==============================] - 6s 1s/step - loss: 0.0231 - accuracy: 0.9900 - val_loss: 0.0045 - val_accuracy: 1.0000\n",
      "Epoch 5/10\n",
      "4/4 [==============================] - 5s 1s/step - loss: 0.0173 - accuracy: 1.0000 - val_loss: 0.0202 - val_accuracy: 0.9900\n",
      "Epoch 6/10\n",
      "4/4 [==============================] - 6s 2s/step - loss: 0.0333 - accuracy: 0.9800 - val_loss: 0.0046 - val_accuracy: 1.0000\n",
      "Epoch 7/10\n",
      "4/4 [==============================] - 6s 2s/step - loss: 0.0308 - accuracy: 0.9900 - val_loss: 0.0060 - val_accuracy: 1.0000\n",
      "Epoch 8/10\n",
      "4/4 [==============================] - 6s 2s/step - loss: 0.0244 - accuracy: 0.9900 - val_loss: 0.0042 - val_accuracy: 1.0000\n",
      "Epoch 9/10\n",
      "4/4 [==============================] - 6s 2s/step - loss: 0.0147 - accuracy: 0.9900 - val_loss: 0.0205 - val_accuracy: 0.9900\n",
      "Epoch 10/10\n",
      "4/4 [==============================] - 6s 2s/step - loss: 0.0592 - accuracy: 0.9800 - val_loss: 0.0256 - val_accuracy: 0.9900\n"
     ]
    }
   ],
   "source": [
    "#training \n",
    "history = classifier.fit(training_set,\n",
    "                         steps_per_epoch=4,\n",
    "                         epochs=10,\n",
    "                         validation_data=test_set,\n",
    "                         validation_steps=4)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 9,
   "metadata": {
    "ExecuteTime": {
     "end_time": "2022-04-22T17:57:19.761932Z",
     "start_time": "2022-04-22T17:57:19.715269Z"
    }
   },
   "outputs": [],
   "source": [
    "classifier.save(r'C:\\Users\\dell\\Desktop\\MYFILES\\COVID-19/model.h5')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 10,
   "metadata": {
    "ExecuteTime": {
     "end_time": "2022-04-22T17:57:24.388771Z",
     "start_time": "2022-04-22T17:57:19.763343Z"
    }
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "4/4 [==============================] - 3s 588ms/step - loss: 0.0256 - accuracy: 0.9900\n"
     ]
    },
    {
     "data": {
      "text/plain": [
       "[0.025601541623473167, 0.9900000095367432]"
      ]
     },
     "execution_count": 10,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# evaluation on test set\n",
    "loaded_model = tf.keras.models.load_model(r'C:\\Users\\dell\\Desktop\\MYFILES\\COVID-19/model.h5')\n",
    "loaded_model.evaluate(test_set)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 14,
   "metadata": {
    "ExecuteTime": {
     "end_time": "2022-04-22T18:00:16.263596Z",
     "start_time": "2022-04-22T18:00:15.959711Z"
    }
   },
   "outputs": [
    {
     "data": {
      "image/png": "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\n",
      "text/plain": [
       "<Figure size 576x396 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 576x396 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "\n",
    "import matplotlib.pyplot as plt\n",
    "plt.style.use(\"seaborn\")\n",
    "plt.plot(history.history['accuracy'])\n",
    "plt.plot(history.history['val_accuracy'])\n",
    "plt.title('model accuracy')\n",
    "plt.ylabel('accuracy')\n",
    "plt.xlabel('epoch')\n",
    "plt.legend(['train', 'test'], loc='upper left')\n",
    "plt.show()\n",
    "\n",
    "plt.plot(history.history['loss'])\n",
    "plt.plot(history.history['val_loss'])\n",
    "plt.title('model loss')\n",
    "plt.ylabel('loss')\n",
    "plt.xlabel('epoch')\n",
    "plt.legend(['train', 'test'], loc='upper left')\n",
    "plt.show()\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 16,
   "metadata": {
    "ExecuteTime": {
     "end_time": "2022-04-22T18:01:43.629087Z",
     "start_time": "2022-04-22T18:01:43.153903Z"
    }
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Covid\n"
     ]
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 576x396 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "# for only one prediction\n",
    "import numpy as np\n",
    "\n",
    "from tensorflow.keras.preprocessing import image\n",
    "\n",
    "import matplotlib.pyplot as plt\n",
    "\n",
    "test_image = image.load_img(\n",
    "    r\"C:\\Users\\dell\\Desktop\\MYFILES\\anaconda\\Covid-19-chest-x-ray-detection\\Data\\test\\Normal\\aaa.jpg\",\n",
    "    target_size=(64, 64))\n",
    "\n",
    "plt.imshow(test_image)\n",
    "\n",
    "test_image = image.img_to_array(test_image)\n",
    "\n",
    "test_image = np.expand_dims(test_image, axis=0)\n",
    "\n",
    "result = classifier.predict(test_image)\n",
    "\n",
    "training_set.class_indices\n",
    "\n",
    "if result[0][0] == 1:\n",
    "    prediction = 'No - Covid'\n",
    "else:\n",
    "    prediction = 'Covid'\n",
    "print(prediction)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 15,
   "metadata": {
    "ExecuteTime": {
     "end_time": "2022-04-22T18:01:40.553423Z",
     "start_time": "2022-04-22T18:01:40.493789Z"
    }
   },
   "outputs": [
    {
     "ename": "NameError",
     "evalue": "name 'image' is not defined",
     "output_type": "error",
     "traceback": [
      "\u001b[1;31m---------------------------------------------------------------------------\u001b[0m",
      "\u001b[1;31mNameError\u001b[0m                                 Traceback (most recent call last)",
      "Input \u001b[1;32mIn [15]\u001b[0m, in \u001b[0;36m<cell line: 5>\u001b[1;34m()\u001b[0m\n\u001b[0;32m      4\u001b[0m \u001b[38;5;28;01mimport\u001b[39;00m \u001b[38;5;21;01mos\u001b[39;00m\n\u001b[0;32m      5\u001b[0m \u001b[38;5;28;01mfor\u001b[39;00m i \u001b[38;5;129;01min\u001b[39;00m os\u001b[38;5;241m.\u001b[39mlistdir(\u001b[38;5;124m\"\u001b[39m\u001b[38;5;124mData/test/Normal\u001b[39m\u001b[38;5;124m\"\u001b[39m):\n\u001b[1;32m----> 6\u001b[0m     img \u001b[38;5;241m=\u001b[39m \u001b[43mimage\u001b[49m\u001b[38;5;241m.\u001b[39mload_img(\u001b[38;5;124m\"\u001b[39m\u001b[38;5;124mData/test/Normal/\u001b[39m\u001b[38;5;124m\"\u001b[39m \u001b[38;5;241m+\u001b[39m i, target_size\u001b[38;5;241m=\u001b[39m(\u001b[38;5;241m64\u001b[39m, \u001b[38;5;241m64\u001b[39m))\n\u001b[0;32m      7\u001b[0m     img \u001b[38;5;241m=\u001b[39m image\u001b[38;5;241m.\u001b[39mimg_to_array(img)\n\u001b[0;32m      8\u001b[0m     img \u001b[38;5;241m=\u001b[39m np\u001b[38;5;241m.\u001b[39mexpand_dims(img, axis\u001b[38;5;241m=\u001b[39m\u001b[38;5;241m0\u001b[39m)\n",
      "\u001b[1;31mNameError\u001b[0m: name 'image' is not defined"
     ]
    }
   ],
   "source": [
    "# plot confusion metrix\n",
    "y_pred = []\n",
    "y_test = []\n",
    "import os\n",
    "for i in os.listdir(\"Data/test/Normal\"):\n",
    "    img = image.load_img(\"Data/test/Normal/\" + i, target_size=(64, 64))\n",
    "    img = image.img_to_array(img)\n",
    "    img = np.expand_dims(img, axis=0)\n",
    "    p = classifier.predict(img)\n",
    "    y_test.append(p[0, 0])\n",
    "    y_pred.append(1)\n",
    "for i in os.listdir(\"Data/test/Covid\"):\n",
    "    img = image.load_img(\"Data/test/Covid/\"+ i, target_size=(64, 64))\n",
    "    img = image.img_to_array(img)\n",
    "    img = np.expand_dims(img, axis=0)\n",
    "    p = classifier.predict(img)\n",
    "    y_test.append(p[0, 0])\n",
    "    y_pred.append(0)\n",
    "\n",
    "y_pred = np.array(y_pred)\n",
    "y_test = np.array(y_test)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {
    "ExecuteTime": {
     "end_time": "2022-04-22T17:57:24.434852Z",
     "start_time": "2022-04-22T17:57:24.434852Z"
    }
   },
   "outputs": [],
   "source": [
    "from sklearn.metrics import confusion_matrix\n",
    "import seaborn as sns\n",
    "from sklearn.metrics import classification_report\n",
    "cm = confusion_matrix(y_pred, y_test)\n",
    "sns.heatmap(cm, cmap=\"plasma\", annot=True)\n",
    "plt.show()\n",
    "\n",
    "print(classification_report(y_pred, y_test))\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": []
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3 (ipykernel)",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.8.13"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 4
}
